{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Header/Header.js","components/Jumbotron/Jumbotron.js","components/ImageCard/ImageCard.js","components/Footer/Footer.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Header","score","bestScore","Jumbotron","ImageCard","_ref","handleClick","_ref$data","data","id","name","image","onClick","alt","src","Footer","App","state","characters","correct","gameOver","headerMessage","charactersCopy","_this","map","p","Object","objectSpread","clickedCharacter","find","character","clicked","forEach","sort","b","Math","random","console","log","JSON","stringify","setState","this","_this2","components_Wrapper_Wrapper","components_Header_Header","renderHeader","components_Jumbotron_Jumbotron","components_ImageCard_ImageCard","components_Footer_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"wpEAKeA,SAFC,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,YCiB1CC,SAjBA,SAAAN,GAAK,OAChBC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACTJ,EAAMK,UAEXJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UACYJ,EAAMO,MADlB,kBAEiBP,EAAMQ,gBCDxBC,SATG,kBACdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mGCOOM,SAVG,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAFC,EAAAF,EAAeG,KAAQC,EAAvBF,EAAuBE,GAAIC,EAA3BH,EAA2BG,KAAMC,EAAjCJ,EAAiCI,MAAjC,OACdhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKe,QAAS,kBAAMN,EAAYG,IAAKX,UAAU,OAAOW,GAAG,UACrDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKgB,IAAKH,EAAMI,IAAKH,EAAOF,GAAG,wBCFhCM,SAFA,SAAArB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUJ,EAAMK,YCwFxCiB,6MAjFbC,MAAQ,CACNC,aACAC,QAAS,EACTjB,UAAW,EACXkB,UAAU,EACVC,cAAe,8BAIjBf,YAAc,SAAAG,GAEZ,IAAMa,EAAiBC,EAAKN,MAAMC,WAAWM,IAAK,SAAAC,GAAM,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,KAC9DG,EAAmBN,EAAeO,KAAK,SAAAC,GAAS,OAAIA,EAAUrB,KAAOA,IAEvEU,EAAUI,EAAKN,MAAME,QACrBjB,EAAYqB,EAAKN,MAAMf,UACvBkB,EAAWG,EAAKN,MAAMG,SACtBC,EAAgBE,EAAKN,MAAMI,eAGE,IAA7BO,EAAiBG,SACnBV,EAAgB,yBAChBO,EAAiBG,SAAU,IAC3BZ,EAGcjB,IACZA,EAAYiB,GAIVA,GAAW,KACbC,GAAW,EACXD,EAAU,EACVG,EAAeU,QAAQ,SAAAF,GACrBA,EAAUC,SAAU,IAEtBV,EAAgB,iBAGlBC,EAAeW,KAAK,SAAUrC,EAAGsC,GAAK,MAAO,GAAMC,KAAKC,aAExDC,QAAQC,IAAI,eAAiBC,KAAKC,UAAUZ,IAC5CT,EAAU,EACVE,EAAgB,gCAChBD,GAAW,EACXE,EAAeU,QAAQ,SAAAF,GACrBA,EAAUC,SAAU,EAEpBT,EAAeW,KAAK,SAAUrC,EAAGsC,GAAK,MAAO,GAAMC,KAAKC,cAG5Db,EAAKkB,SAAS,CAAEvB,WAAYI,EAAgBH,UAASC,WAAUlB,YAAWmB,iGAK1E,OADaqB,KAAKzB,MAAMI,+CAIjB,IAAAsB,EAAAD,KACP,OACE/C,EAAAC,EAAAC,cAAC+C,EAAD,KACEjD,EAAAC,EAAAC,cAACgD,EAAD,CAAQ3C,UAAWwC,KAAKzB,MAAMf,UAAWD,MAAOyC,KAAKzB,MAAME,SACxDuB,KAAKI,gBAERnD,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZ4C,KAAKzB,MAAMC,WAAWM,IAAI,SAAAM,GAAS,OAClCnC,EAAAC,EAAAC,cAACmD,EAAD,CACE1C,YAAaqC,EAAKrC,YAClBE,KAAMsB,OAIZnC,EAAAC,EAAAC,cAACoD,EAAD,cA5EUC,aCJlBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.75ee0696.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n    <div>\n        <nav className=\"navbar\">\n            <ul>\n                <li>Clicky!</li>\n                <li className=\"message\">\n                    {props.children}\n                </li>\n                <li className=\"score\"> \n                    Score: {props.score} | \n                    Best Score: {props.bestScore}\n                </li>\n            </ul>\n        </nav>\n    </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n    <div className=\"jumbotron\">\n        <h1 className=\"display-4\">Clicky Game</h1>\n        <p className=\"lead\">\n            Click on an image to earn points, but careful not to click on it more than once or you lose!\n        </p>\n    </div>\n);\n\nexport default Jumbotron;\n\n","import React from \"react\";\nimport \"./ImageCard.css\";\n\nconst ImageCard = ({handleClick, data: { id, name, image }}) => (\n    <div className=\"col-md-3 main\">\n        <div onClick={() => handleClick(id)} className=\"card\" id=\"remove\">\n            <div className=\"imgCards\">\n                <img alt={name} src={image} id=\"characterImage\" />\n            </div>\n        </div>\n    </div>\n);\n\nexport default ImageCard;\n\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = props => <div className=\"footer\">{props.children}</div>;\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport characters from './characters.json'\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\nimport Jumbotron from \"./components/Jumbotron\";\nimport ImageCard from './components/ImageCard';\nimport Footer from './components/Footer';\nimport \"./index.css\"\n\nclass App extends Component {\n  state = {\n    characters,\n    correct: 0,\n    bestScore: 0,\n    gameOver: false,\n    headerMessage: \"Click an image to begin!\"\n  }\n\n  // Function to handle click\n  handleClick = id => {\n    // Make a copy of the state array to work with\n    const charactersCopy = this.state.characters.map( p => {return { ...p } });\n    const clickedCharacter = charactersCopy.find(character => character.id === id);\n\n    let correct = this.state.correct;\n    let bestScore = this.state.bestScore;\n    let gameOver = this.state.gameOver;\n    let headerMessage = this.state.headerMessage;\n\n    // If user clicks on image once change character click state, header message, and score.\n    if (clickedCharacter.clicked === false) {\n      headerMessage = \"You guessed correctly!\";\n      clickedCharacter.clicked = true;\n      correct++\n\n      // If user scores higher than best score, change best score.\n      if (correct > bestScore) {\n        bestScore = correct;\n      }\n\n      // If user wins start game over and change header message.\n      if (correct >= 12) {\n        gameOver = true;\n        correct = 0;\n        charactersCopy.forEach(character => {\n          character.clicked = false;\n        });\n        headerMessage = \"Yay! You Win!\";\n      }\n      // Shuffle array to display random images.\n      charactersCopy.sort(function (a, b) { return 0.5 - Math.random() });\n    } else {\n      console.log(\"Double Click\" + JSON.stringify(clickedCharacter));\n      correct = 0;\n      headerMessage = \"You already guessed that one!\";\n      gameOver = true;\n      charactersCopy.forEach(character => {\n        character.clicked = false;\n        // Shuffle array to display random images.\n        charactersCopy.sort(function (a, b) { return 0.5 - Math.random() });\n      });\n    }\n    this.setState({ characters: charactersCopy, correct, gameOver, bestScore, headerMessage });\n  }\n\n  renderHeader() {\n    let header = this.state.headerMessage;\n    return header;\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header bestScore={this.state.bestScore} score={this.state.correct}>\n          {this.renderHeader()}\n        </Header>\n        <Jumbotron />\n        <div className=\"row\">\n          {this.state.characters.map(character => (\n            <ImageCard\n              handleClick={this.handleClick}\n              data={character}\n            />\n          ))}\n        </div>\n        <Footer />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}